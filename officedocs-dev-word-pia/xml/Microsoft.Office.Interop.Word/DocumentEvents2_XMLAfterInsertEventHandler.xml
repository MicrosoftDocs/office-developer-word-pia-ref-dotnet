<Type Name="DocumentEvents2_XMLAfterInsertEventHandler" FullName="Microsoft.Office.Interop.Word.DocumentEvents2_XMLAfterInsertEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DocumentEvents2_XMLAfterInsertEventHandler(XMLNode NewXMLNode, bool InUndoRedo);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DocumentEvents2_XMLAfterInsertEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.DocumentEvents2_XMLAfterInsertEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DocumentEvents2_XMLAfterInsertEventHandler(NewXMLNode As XMLNode, InUndoRedo As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DocumentEvents2_XMLAfterInsertEventHandler(XMLNode ^ NewXMLNode, bool InUndoRedo);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="NewXMLNode" Type="Microsoft.Office.Interop.Word.XMLNode" />
    <Parameter Name="InUndoRedo" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="NewXMLNode">
      <see cref="T:Microsoft.Office.Interop.Word.XMLNode" />. The newly added XML node.</param>
    <param name="InUndoRedo">
      <b>Boolean</b>. <b>True</b> indicates the action was performed using the Undo or Redo feature in Microsoft Word.</param>
    <summary>A <b>Delegate</b> type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Word.DocumentEvents2_Event.XMLAfterInsert" /> event. The <b>XMLAfterInsert</b> event occurs when a user adds a new XML element to a document.</summary>
    <remarks>
      <para>If the <paramref name="InUndoRedo" /> parameter is <b>True</b>, never change the XML in a document while the XMLAfterInsert and XMLBeforeDelete events are running. </para>
      <para>If the InUndoRedo parameter is False, you can insert and delete the XML in the document, but be careful that the <b>XMLAfterInsert</b> and <see cref="E:Microsoft.Office.Interop.Word.DocumentEvents2_Event.XMLBeforeDelete" /> events will not try to cancel each other out, causing an infinite loop. You can prevent infinite loops by using a global <b>Boolean</b> variable and check for that at the beginning of the error handler.</para>
      <para />
    </remarks>
  </Docs>
</Type>