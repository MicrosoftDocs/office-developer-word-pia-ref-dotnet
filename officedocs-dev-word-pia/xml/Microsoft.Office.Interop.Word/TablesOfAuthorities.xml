<Type Name="TablesOfAuthorities" FullName="Microsoft.Office.Interop.Word.TablesOfAuthorities">
  <TypeSignature Language="C#" Value="public interface TablesOfAuthorities : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TablesOfAuthorities implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.TablesOfAuthorities" />
  <TypeSignature Language="VB.NET" Value="Public Interface TablesOfAuthorities&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class TablesOfAuthorities : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020912-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A collection of <see cref="T:Microsoft.Office.Interop.Word.TableOfAuthorities" /> objects (TOA fields) that represents the tables of authorities in a document.</summary>
    <remarks>
      <para>Use the <see cref="T:Microsoft.Office.Interop.Word.TablesOfAuthorities" /> property to return the <b>TablesOfAuthorities</b> collection.</para>
      <para>Use the <see cref="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.Add(Microsoft.Office.Interop.Word.Range,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> method to add a table of authorities to a document. A table of authorities is built from TA (Table of Authorities Entry) fields in a document.</para>
      <para>Use <b>TablesOfAuthorities</b>(<paramref name="index" />), where <paramref name="index" /> is the index number, to return a single <b>TableOfAuthorities</b> object. The index number represents the position of the table of authorities in the document.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TableOfAuthorities Add (Microsoft.Office.Interop.Word.Range Range, ref object Category, ref object Bookmark, ref object Passim, ref object KeepEntryFormatting, ref object Separator, ref object IncludeSequenceName, ref object EntrySeparator, ref object PageRangeSeparator, ref object IncludeCategoryHeader, ref object PageNumberSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.TableOfAuthorities Add([in]class Microsoft.Office.Interop.Word.Range Range, [in]object&amp; Category, [in]object&amp; Bookmark, [in]object&amp; Passim, [in]object&amp; KeepEntryFormatting, [in]object&amp; Separator, [in]object&amp; IncludeSequenceName, [in]object&amp; EntrySeparator, [in]object&amp; PageRangeSeparator, [in]object&amp; IncludeCategoryHeader, [in]object&amp; PageNumberSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.Add(Microsoft.Office.Interop.Word.Range,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TableOfAuthorities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="Category" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Bookmark" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Passim" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="KeepEntryFormatting" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludeSequenceName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="EntrySeparator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PageRangeSeparator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludeCategoryHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PageNumberSeparator" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Range">Required <see cref="T:Microsoft.Office.Interop.Word.Range" /> object. The range where you want the table of authorities to appear. The table of authorities replaces the range if the range isn't collapsed.</param>
        <param name="Category">Optional <b>Object</b>. The category of entries you want to include in the table of authorities. Corresponds to the \c switch for a Table of Authorities (TOA) field. Values 0 through 16 correspond to the items listed in the Category box on the Table of Authorities tab in the Index and Tables dialog box (Reference command, Insert menu). The default value is 1.</param>
        <param name="Bookmark">Optional <b>Object</b>. The string name of the bookmark from which you want to collect entries for the table of authorities. If <paramref name="Bookmark" /> is specified, the entries are collected only from the portion of the document marked by the bookmark. Corresponds to the \b switch for a Table of Authorities (TOA) field.</param>
        <param name="Passim">Optional <b>Object</b>. <b>True</b> to replace five or more page references to the same authority with Passim in the table of authorities. Corresponds to the \p switch for a Table of Authorities (TOA) field. If this argument is omitted, <paramref name="Passim" /> is assumed to be <b>False</b>.</param>
        <param name="KeepEntryFormatting">Optional <b>Object</b>. <b>True</b> to apply formatting from table of authorities entries to the entries in the table of authorities. Corresponds to the \f switch for a Table of Authorities (TOA) field. If this argument is omitted, <paramref name="KeepEntryFormatting" /> is assumed to be <b>True</b>.</param>
        <param name="Separator">Optional <b>Object</b>. The characters (up to five) between each sequence number and its page number in the table of authorities. Corresponds to the \d switch for a Table of Authorities (TOA) field. If argument is omitted, a hyphen (-) is used.</param>
        <param name="IncludeSequenceName">Optional <b>Object</b>. A string that specifies the Sequence (SEQ) field identifier for the table of authorities. Corresponds to the \s switch for a Table of Authorities (TOA) field.</param>
        <param name="EntrySeparator">Optional <b>Object</b>. The characters (up to five) that separate each entry and its page number in the table of authorities. Corresponds to the \e switch for a Table of Authorities (TOA) field. If this argument is omitted, no separator is used.</param>
        <param name="PageRangeSeparator">Optional <b>Object</b>. The characters (up to five) that separate the beginning and ending page numbers in each page range the table of authorities. Corresponds to the \g switch for a Table of Authorities (TOA) field. If this argument is omitted, an en dash is used.</param>
        <param name="IncludeCategoryHeader">Optional <b>Object</b>. <b>True</b> to have the category name for each group of entries appear in the table of authorities (for example, Cases). Corresponds to the \h switch for a Table of Authorities (TOA) field. If this argument is omitted, <paramref name="IncludeCategoryHeader" /> is assumed to be <b>True</b>.</param>
        <param name="PageNumberSeparator">Optional <b>Object</b>. The characters (up to five) that separate individual page numbers within page references in the table of authorities. Corresponds to the \l switch for a Table of Authorities (TOA) field. If this argument is omitted, a comma and a space are used.</param>
        <summary>Returns a <see cref="T:Microsoft.Office.Interop.Word.TableOfAuthorities" /> object that represents a table of authorities added to a document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>A table of authorities is built from Table of Authorities Entry (TA) fields in a document. Use the <see cref="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.MarkCitation(Microsoft.Office.Interop.Word.Range,System.String,System.Object@,System.Object@,System.Object@)" /> method to mark citations to be included in the table of authorities.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of items in the specified collection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a 32-bit integer that indicates the application in which the specified object was created.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD." This value can also be represented by the constant <b>wdCreatorCode</b>.</para>
          <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdToaFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdToaFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As WdToaFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdToaFormat Format { Microsoft::Office::Interop::Word::WdToaFormat get(); void set(Microsoft::Office::Interop::Word::WdToaFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdToaFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets the formatting for the tables of authorities in the specified document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Office.Interop.Word.WdToaFormat" /> can be one of the following <b>WdToaFormat</b> constants:</para>
          <para>
            <b>wdTOAClassic</b>
          </para>
          <para>
            <b>wdTOAFormal</b>
          </para>
          <para>
            <b>wdTOATemplate</b>
          </para>
          <para>
            <b>wdTOADistinctive</b>
          </para>
          <para>
            <b>wdTOASimple</b>
          </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TableOfAuthorities this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.TableOfAuthorities Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As TableOfAuthorities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::TableOfAuthorities ^ default[int] { Microsoft::Office::Interop::Word::TableOfAuthorities ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TableOfAuthorities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">An <b>Integer</b> indicating the ordinal position of the individual object.</param>
        <summary>Returns an individual object in a collection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAllCitations">
      <MemberSignature Language="C#" Value="public void MarkAllCitations (string ShortCitation, ref object LongCitation, ref object LongCitationAutoText, ref object Category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkAllCitations([in]string ShortCitation, [in]object&amp; LongCitation, [in]object&amp; LongCitationAutoText, [in]object&amp; Category) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.MarkAllCitations(System.String,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkAllCitations (ShortCitation As String, Optional ByRef LongCitation As Object, Optional ByRef LongCitationAutoText As Object, Optional ByRef Category As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShortCitation" Type="System.String" />
        <Parameter Name="LongCitation" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LongCitationAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Category" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ShortCitation">Required <b>String</b>. The short citation for the entry as it will appear in the Mark Citation dialog box (Insert menu, Index and Tables command).</param>
        <param name="LongCitation">Optional <b>Object</b>. The long citation string for the entry as it will appear in the table of authorities.</param>
        <param name="LongCitationAutoText">Optional <b>Object</b>. The AutoText entry name that contains the text of the long citation as it will appear in the table of authorities.</param>
        <param name="Category">Optional <b>Object</b>. The category number to be associated with the entry: 1 corresponds to the first category in the Category box in the Mark Citation dialog box, 2 corresponds to the second category, and so on.</param>
        <summary>Inserts a TA (Table of Authorities Entry) field after all instances of the <paramref name="ShortCitation" /> text.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkCitation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Field MarkCitation (Microsoft.Office.Interop.Word.Range Range, string ShortCitation, ref object LongCitation, ref object LongCitationAutoText, ref object Category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Field MarkCitation([in]class Microsoft.Office.Interop.Word.Range Range, [in]string ShortCitation, [in]object&amp; LongCitation, [in]object&amp; LongCitationAutoText, [in]object&amp; Category) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.MarkCitation(Microsoft.Office.Interop.Word.Range,System.String,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="ShortCitation" Type="System.String" />
        <Parameter Name="LongCitation" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LongCitationAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Category" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Range">Required <see cref="T:Microsoft.Office.Interop.Word.Range" /> object. The location of the table of authorities entry. The TA field is inserted after <paramref name="Range" />.</param>
        <param name="ShortCitation">Required <b>String</b>. The short citation for the entry as it will appear in the Mark Citation dialog box (Insert menu, Index and Tables command).</param>
        <param name="LongCitation">Optional <b>Object</b>. The long citation for the entry as it will appear in the table of authorities.</param>
        <param name="LongCitationAutoText">Optional <b>Object</b>. The name of the AutoText entry that contains the text of the long citation as it will appear in the table of authorities.</param>
        <param name="Category">Optional <b>Object</b>. The category number to be associated with the entry: 1 corresponds to the first category in the Category box in the Mark Citation dialog box, 2 corresponds to the second category, and so on.</param>
        <summary>Inserts a TA (Table of Authorities Entry) field and returns the field as a <see cref="T:Microsoft.Office.Interop.Word.Field" /> object.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextCitation">
      <MemberSignature Language="C#" Value="public void NextCitation (string ShortCitation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextCitation([in]string ShortCitation) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.TablesOfAuthorities.NextCitation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NextCitation (ShortCitation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NextCitation(System::String ^ ShortCitation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShortCitation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ShortCitation">Required <b>String</b>. The text of the short citation.</param>
        <summary>Finds and selects the next instance of a specified citation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.TablesOfAuthorities.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an object that represents the parent object of the specified object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>