<Type Name="ApplicationEvents4_ProtectedViewWindowActivateEventHandler" FullName="Microsoft.Office.Interop.Word.ApplicationEvents4_ProtectedViewWindowActivateEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ApplicationEvents4_ProtectedViewWindowActivateEventHandler(ProtectedViewWindow PvWindow);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ApplicationEvents4_ProtectedViewWindowActivateEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.ApplicationEvents4_ProtectedViewWindowActivateEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ApplicationEvents4_ProtectedViewWindowActivateEventHandler(PvWindow As ProtectedViewWindow)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ApplicationEvents4_ProtectedViewWindowActivateEventHandler(ProtectedViewWindow ^ PvWindow);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="PvWindow" Type="Microsoft.Office.Interop.Word.ProtectedViewWindow" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="PvWindow">The protected view window that is activated.</param>
    <summary>A <b>Delegate</b> type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Word.ApplicationEvents4_Event.ProtectedViewWindowActivate" /> event. The <b>ProtectedViewWindowActivate</b> event Occurs when any protected view window is activated.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>